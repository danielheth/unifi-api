#!/usr/bin/env python

import argparse

from unifi.controller import Controller

parser = argparse.ArgumentParser()
parser.add_argument('-c', '--controller', default='unifi', help='the controller address (default "unifi")')
parser.add_argument('-u', '--username', default='admin', help='the controller username (default("admin")')
parser.add_argument('-p', '--password', default='', help='the controller password')
parser.add_argument('-b', '--port', default='8443', help='the controller port (default "8443")')
parser.add_argument('-v', '--version', default='v2', help='the controller base version (default "v2")')
parser.add_argument('-s', '--siteid', default='default', help='the site ID, UniFi >=3.x only (default "default")')
args = parser.parse_args()

c = Controller(args.controller, args.username, args.password, args.port, args.version, args.siteid)

aps = c.get_aps()
ap_names = dict([(ap['mac'], ap.get('name')) for ap in aps])

#for key, value in aps[0].iteritems():
#    print key, value

for ap in aps:
    uplink = ap.get('uplink')
    ap_mac = uplink.get('uplink_mac', 'Unknown')
    if ap_mac != 'Unknown':
        ap_mac = ap_mac.replace(':','-').upper()
    name = ap.get('name', '')
    mac = ap.get('mac')
    ip = ap.get('ip')
    print "%s|%s|%s|%s" % (mac.replace(':','-').upper(), ip, name, ap_mac)



clients = c.get_clients()

#for key, value in clients[1].iteritems():
#    print key, value

for client in clients:
    ap_mac = client.get('ap_mac') or client.get('sw_mac')
    mac = client.get('mac')
    ip = client.get('ip')
    name = client.get('name') or client.get('hostname', 'Unknown')
    print "%s|%s|%s|%s" % (mac.replace(':','-').upper(), ip, name, ap_mac.replace(':','-').upper())
